From 17d0a0cadb6f09e2bcf18336e482e75d7f292248 Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Fri, 28 Apr 2023 00:47:41 -0700
Subject: [PATCH 27/60] UBUNTU: SAUCE: apparmor3.2.0 [27/60]: Stacking v38: Fix
 prctl() syscall with apparmor=0

This should not be forwarded upstream as it fixes an issue in the currently
out of tree LSM stacking patchset that Ubuntu carries.

When apparmor=0 is specified as a boot option, the LSM no longer has a
"major" LSM registered and the condition lsm_slot == 0 will be true.

The lsm_slot == 0 check is present to protect against access to the
PR_LSM_ATTR_SET and PR_LSM_ATTR_GET command options being run without
a major LSM present but the check is too early preventing the regular
LSM hook processing (lsm_slot == 0 does not means there are not
minor lsms present).

Move the check after regular LSM hook processing to restrore the
previous behavior.

BugLink: http://bugs.launchpad.net/bugs/2016908
Fixes: c2350a7eca5c ("UBUNTU: SAUCE: Stacking v38: LSM: Specify which LSM to display")
Signed-off-by: John Johansen <john.johansen@canonical.com>
---
 security/security.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/security/security.c b/security/security.c
index 37633e35898c..d4d3c70ef840 100644
--- a/security/security.c
+++ b/security/security.c
@@ -2152,9 +2152,6 @@ int security_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 	int rc = LSM_RET_DEFAULT(task_prctl);
 	struct security_hook_list *hp;
 
-	if (lsm_slot == 0)
-		return -EINVAL;
-
 	hlist_for_each_entry(hp, &security_hook_heads.task_prctl, list) {
 		thisrc = hp->hook.task_prctl(option, arg2, arg3, arg4, arg5);
 		if (thisrc != LSM_RET_DEFAULT(task_prctl)) {
@@ -2164,6 +2161,9 @@ int security_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 		}
 	}
 
+	if (lsm_slot == 0)
+		return rc;
+
 	switch (option) {
 	case PR_LSM_ATTR_SET:
 		if (rc && rc != LSM_RET_DEFAULT(task_prctl))
-- 
2.40.1

